MCUFIRMWAREBASE := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))

APPDIR:=$(CURDIR)
EXTERNAL_BOARD_DIRS ?= $(MCUFIRMWAREBASE)/boards/
LAST_MAKEFILEDIR = $(abspath $(dir $(lastword $(MAKEFILE_LIST))))
RIOTBASE ?= $(MCUFIRMWAREBASE)/../RIOT/
RIOTPKG ?= $(MCUFIRMWAREBASE)/pkg

# Create a symbolic for each package in RIOT
pkgs := $(foreach dir,$(wildcard $(RIOTBASE)/pkg/*/Makefile),$(subst Makefile,, $(dir)))
$(foreach pkg,$(pkgs), $(shell ln -sf $(pkg) $(RIOTPKG)/$(notdir $(pkg))))

# Development options
QUIET ?= 1
DEVELHELP ?= 1

MCUFW_MODULE_DIRS = " \
					controllers \
					drivers \
					lib \
					planners \
					platforms \
					sys \
					"

# All directories starting with 'shell_' are shell modules.
# List them to add their parent directory to EXTERNAL_MODULE_DIRS.
shell_module_dirs = $(wildcard $(MCUFW_MODULE_DIRS:%=$(MCUFIRMWAREBASE)/%/*/shell_*/.))
EXTERNAL_MODULE_DIRS += $(MCUFW_MODULE_DIRS:%=$(MCUFIRMWAREBASE)/%/) $(shell_module_dirs:%=%/..)

$(warning $(EXTERNAL_MODULE_DIRS))

# RIOT Makefile include
include $(RIOTBASE)/Makefile.include

ifneq ($(wildcard $(APPDIR)/include/.*),)
	INCLUDES += -I$(APPDIR)/include/

	ifneq ($(CPU),native)
		ifneq ($(wildcard $(APPDIR)/include/real/.*),)
			INCLUDES += -I$(APPDIR)/include/real/
		endif
	else
		ifneq ($(wildcard $(APPDIR)/include/simulation/.*),)
			INCLUDES += -I$(APPDIR)/include/simulation/
		endif
	endif
endif

# As RIOT Makefile.include is included, RAMSIZE can be computed
ifneq ($(CPU),native)
	.DEFAULT_GOAL := world
	RAM_LEN_K := $(shell echo $(RAM_LEN) | sed 's/K//')
	RAMSIZE := $(shell echo $$(( $(RAM_LEN_K) * $(KB) )) )
endif

.PHONY: world
world: all
	$(Q)$(MCUFIRMWAREBASE)/tools/fwsize.sh $(SIZE) $(ELFFILE) $(FLASHSIZE) $(RAMSIZE)
